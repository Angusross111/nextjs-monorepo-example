name: CI-e2e-web-app

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "apps/web-app/**"
      - "packages/**"
      - "package.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - "*.base.json"
      - "*.base.js"
      - ".prettier*.*"
      - ".github/workflows/**"


  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Optional:
    #   Only consider those files/paths to trigger the github action
    #   to prevent unnecessary builds.
    paths:
      - "apps/web-app/**"
      - "packages/**"
      - "package.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - "*.base.json"
      - "*.base.js"
      - ".prettier*.*"
      - ".github/workflows/**"

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.X]
        database:
          - e2e-postgres

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Why not using setup-node 2.2+ cache option (yet) ?
      # see https://github.com/belgattitude/nextjs-monorepo-example/pull/369
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      # see https://github.com/vercel/next.js/pull/27362
      - name: Restore nextjs build web-app from cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/apps/web-app/.next/cache
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
            ${{ github.workspace }}/**/.eslintcache

          key: ${{ runner.os }}-nextjs-web-app-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/web-app/src/**.[jt]sx?', 'apps/web-app/src/**.json') }}
          restore-keys: |
               ${{ runner.os }}-nextjs-web-app-${{ hashFiles('**/yarn.lock') }}-

      - name: Start database
        working-directory: packages/db-main-prisma
        run: docker-compose -f docker-compose.e2e.yml up --detach ${{ matrix.database }}

      - name: Install dependencies
        run: |
          yarn install --immutable
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Create and seed test database
        working-directory: packages/db-main-prisma
        run: |
          yarn prisma db push
          yarn prisma db seed
        env:
          PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/webapp-e2e?schema=public

      - name: Build web-app
        working-directory: apps/web-app
        run: |
          yarn build
        env:
          PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/webapp-e2e?schema=public
          # Don't need to lint / typecheck for e2e, they're done in another workflow
          NEXTJS_IGNORE_ESLINT: 1
          NEXTJS_IGNORE_TYPECHECK: 1
          NEXT_DISABLE_SOURCEMAPS: 1
          NEXT_TELEMETRY_DISABLED: 1
          NEXT_DISABLE_SENTRY: 0
          NEXT_SENTRY_DRY_RUN: 1

      - name: Install Playwright
        run: npx playwright install --with-deps chromium webkit

      - name: E2E run web-app playwright tests
        working-directory: apps/web-app
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- yarn test:e2e
        env:
          E2E_PLAYWRIGHT_MODE: SKIP_BUILD_AND_START
          CI: 1
          PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/webapp-e2e?schema=public

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: web-app-playwright-test-results
          path: apps/web-app/e2e/.out

